<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><!-- Mybatis Mapper.xml임을 나타내는 헤더 -->

<mapper namespace="com.fastcampus.ch4.dao.BoardMapper"><!-- dao작성할때 사용할 네임스페이스-->

    <insert id="insert" parameterType="BoardDto">-- 게시글 등록
        insert into board (title, content, writer)
        values (#{title}, #{content}, #{writer})
    </insert>

    <select id="select" parameterType="int" resultType="BoardDto">-- 클릭한 게시글 읽어오기
        select  bno, title, content, writer, view_cnt, comment_cnt, reg_date, up_date
        from board where bno = #{bno}
    </select>

    <select id="selectAll" resultType="BoardDto">-- 전체 게시글 리스트 로드하기
        select bno, title, content, writer, view_cnt, comment_cnt, reg_date, up_date
        from board order by reg_date desc, bno desc
    </select>

    <select id="count" resultType="int">-- 전체 게시글 개수 세기
        select count(*) from board
    </select>

    <select id="selectPage" parameterType="map" resultType="BoardDto">--게시글 수정, 삭제 후 원래 있던 페이지 로드하기
        select bno, title, content, writer, view_cnt, comment_cnt, reg_date, up_date
        from board order by reg_date desc, bno desc
        limit #{offset}, #{pageSize}-- 해당 게시글이 있는 페이지 불러오기,
        -- LIMIT 절은 반환되는 결과 행의 수를 제한
        -- #{offset}: 이 부분은 반환되는 레코드의 시작점을 지정합니다. 예를 들어, offset이 10이라면, 첫 10개의 레코드는 건너뛰고 그 다음 레코드부터 결과로 포함됩니다.
        -- #{pageSize}: 이 부분은 반환되는 레코드의 최대 수를 지정합니다. 예를 들어, pageSize가 5라면, 쿼리 결과는 최대 5개의 레코드를 포함할 수 있습니다.
    </select>

    <select id="searchSelectPage" parameterType="SearchCondition" resultType="BoardDto">-- 키워드로 게시글 검색
        select bno, title, content, writer, view_cnt, comment_cnt, reg_date, up_date
        from board
        where true
        <include refid="searchCondition"/>-- refid(reference identifer: 참조 식별자)
        order by reg_date desc, bno desc
        limit #{offset}, #{pageSize}
    </select>

    <select id="searchResultCnt" parameterType="SearchCondition" resultType="int">-- 키워드로 검색된 게시글 개수 세기
        select count(*)
        from board
        where true
        <include refid="searchCondition"/>

    </select>

    <sql id="searchCondition">
        <choose>
            <when test='option=="T"'>
                and title like concat('%', #{keyword}, '%')-- title = %#{keyword}%, 키워드 앞뒤로 여러 글자가 붙을 수 있음을 의미함
            </when>
            <when test='option="w"'>
                and writer like concat('%', #{keyword}, '%')
            </when>
            <otherwise>
                and (title like concat('%', #{keyword}, '%')
                or content like concat('%', #{keyword}, '%'))
            </otherwise>

        </choose>
    </sql>

    <update id="update" parameterType="BoardDto">-- 게시글 내용 수정
        update board SET title = #{title}, content = #{content}, up_date = now() where bno = #{bno} and writer = #{writer}
    </update>

    <update id="increaseViewCnt" parameterType="int">-- 게시글 뷰카운트
        update board set view_cnt = view_cnt + 1 where bno = #{bno}
    </update>
    
    <update id="updateCommentCnt" parameterType="map">-- 게시글 댓글 수
        update board set comment_cnt = comment_cnt + #{cnt} where bno = #{bno}
    </update>

    <delete id="deleteAll">-- 테스트용 전체삭제
        delete from board
    </delete>

    <delete id="delete" parameterType="map">-- 게시글 삭제
        delete from board where bno = #{bno} and writer = #{writer}
    </delete>
</mapper>

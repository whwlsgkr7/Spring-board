* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font-family: "Noto Sans KR", sans-serif;
}

a {
    text-decoration: none; /* 링크의 밑줄을 제거 */
    color: black;
}
button,
input {
    border: none;
    outline: none; /* 포커스 시 생성되는 외곽선을 제거 */
}

.board-container {
    width: 60%;
    height: 1200px;
    margin: 0 auto; /* 요소를 수평 중앙에 배치 */
}

.search-container {
    background-color: rgb(253, 253, 250);
    width: 100%;
    height: 110px;
    border: 1px solid #ddd;
    margin-top : 10px;
    margin-bottom: 30px;
    display: flex; /* 해당 요소를 Flex 컨테이너로 만든다. 이는 내부의 자식 요소들(플렉스 아이템)이 플렉스 레이아웃을 사용하여 배치되도록 한다.
    플렉스 레이아웃은 요소들을 행 또는 열의 형태로 유연하게 배치할 수 있게 해준다. 기본적으로 자식 요소들은 행으로 배치된다. */
    justify-content: center; /* 이 속성은 플렉스 컨테이너 내의 아이템들을 주축(main axis)을 따라 정렬하는 방법을 지정한다.
    center 값은 아이템들을 주축의 가운데에 위치시킵니다. 예를 들어, 요소들이 가로로 나열되어 있다면, 이들은 가로축 중앙에 배치된다. */
    align-items: center; /* 이 속성은 플렉스 컨테이너 내의 아이템들을 교차축(cross axis)을 따라 어떻게 정렬할지 지정한다.
    center 값은 아이템들을 교차축의 가운데에 위치시킵니다. 예를 들어, 요소들이 가로로 나열되어 있다면, 이들은 세로 방향으로 중앙에 배치된다. */
}
.search-form {
    height: 37px;
    display: flex;
}
.search-option {
    width: 100px;
    height: 100%;
    outline: none;
    margin-right: 5px;
    border: 1px solid #ccc;
    color: #808080;
}

.search-option > option {
    text-align: center;
}

.search-input {
    color: #808080;
    background-color: #ffffff;
    border: 1px solid #ccc;
    height: 100%;
    width: 300px;
    font-size: 15px;
    padding: 5px 7px;
}
.search-input::placeholder {
    color: #808080;
}

.search-button {
    /* 메뉴바의 검색 버튼 아이콘  */
    width: 20%;
    height: 100%;
    background-color: rgb(22, 22, 22);
    color: rgb(209, 209, 209);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 15px;
}
.search-button:hover {
    color: rgb(165, 165, 165);
}

table {
    border-collapse: collapse;
    width: 100%;
    border-top: 2px solid rgb(39, 39, 39);
}

tr:nth-child(even) {
    background-color: #f0f0f070;
}

th,
td {
    width:300px;
    text-align: center;
    padding: 10px 12px;
    border-bottom: 1px solid #ddd;
}

td {
    color: rgb(53, 53, 53);
}

.no      { width:150px;}
.title   { width:50%;  }

td.title   { text-align: left;  }
td.writer  { text-align: left;  }
td.viewcnt { text-align: right; }

td.title:hover {
    text-decoration: underline;
}

.paging {
    color: black;
    width: 100%;
    align-items: center;
}

.page {
    color: black;
    padding: 6px;
    margin-right: 10px;
}
.paging-active {
    background-color: rgb(216, 216, 216);
    border-radius: 5px;
    color: rgb(24, 24, 24);
}

.paging-container {
    width:100%;
    height: 70px;
    display: flex;
    margin-top: 50px;
    margin : auto;
}
.btn-write {
    background-color: rgb(236, 236, 236); /* Blue background */
    border: none; /* Remove borders */
    color: black; /* White text */
    padding: 6px 12px; /* Some padding */
    font-size: 16px; /* Set a font size */
    cursor: pointer; /* Mouse pointer on hover */
    border-radius: 5px;
    margin-left: 30px;
}

.btn-write:hover {
    text-decoration: underline;
}
